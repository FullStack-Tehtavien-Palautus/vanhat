{"version":3,"sources":["components/Blog.js","components/Login.js","components/Togglable.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","handleLike","useState","detailed","setDetailed","class","title","onClick","event","url","likes","blogId","id","author","handleLogin","username","handleUsername","password","handlePassword","onSubmit","type","name","value","onChange","user","handleLogout","Togglable","props","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","buttonLabel","children","baseUrl","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","console","log","put","login","credentials","Header","Notify","notice","handleNotice","className","toLowerCase","startsWith","Create","handleCreate","handleTitle","handleAuthor","handleUrl","App","blogs","setBlogs","setUser","setUsername","setPassword","setNotice","setTitle","setAuthor","setUrl","setTimedNotice","setTimeout","sortLikes","b","useEffect","blogService","sort","credentialsJSON","window","localStorage","getItem","JSON","parse","removeItem","preventDefault","loginService","loginUser","setItem","stringify","blogObject","returnedBlog","concat","catch","error","toString","target","attributes","blogid","find","updatedBlog","filter","Login","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3060ec68.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport '../blog.css'\n\nconst Blog = ({blog, handleLike}) => {\n  const [detailed, setDetailed] = useState( false )\n  const toggleDetailed = (event) => {setDetailed(!detailed)}\n    \n  return (\n    <div class='blogBox'>\n      <p>{blog.title}\n        <button onClick={toggleDetailed}>\n          {detailed?'hide':'show'}\n        </button></p>\n      { detailed && <>\n        <p>{blog.url}</p>\n        <p>likes {blog.likes} <button blogId={blog.id} onClick={handleLike}>\n            like</button></p>\n        <p>{blog.author}</p>\n      </> }\n    </div>  \n  )\n}\n\nexport default Blog","import React from 'react'\n\nconst Form = ({ handleLogin, \n    username, handleUsername,\n    password, handlePassword }) => (\n  <div>\n    <h3>Please, log in:</h3>\n    <form onSubmit={handleLogin}>\n      <div>\n        username:\n        <input type=\"text\" name=\"Username\" \n            value={username} onChange={handleUsername} />\n      </div>\n      <div>\n        password:\n        <input type=\"text\" name=\"Password\" \n            value={password} onChange={handlePassword} />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>\n  </div>\n)\nconst Info = ({user, handleLogout}) => (\n  <div>\n    <h3>Logged in as:</h3>\n    <div>{user.name} ({user.username})</div>\n    <button onClick={handleLogout}>logout</button>\n  </div>\n)\n\nexport default { Form, Info }\n","/* Direct Copy & Paste from course material */\nimport React, { useState } from 'react'\n\nconst Togglable = (props) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Togglable","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  \n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  console.log(newObject.id)\n  \n  const response = await axios.put(`${baseUrl}/${newObject.id}`, newObject, config)\n  return response.data\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create, update }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Login from './components/Login'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './notice.css'\n\nconst Header = () => (\n  <h2>blogs</h2>\n)\n\nconst Notify = ({notice, handleNotice}) => {\n  if (notice === null) return (<div className=\"noticeBox\"></div>) \n  return (\n    <div className=\"noticeBox\">\n      <div className={(notice.toLowerCase()).startsWith('error') ?\n          'errorNotice' : 'infoNotice'} onClick={handleNotice}>\n        {notice}\n      </div>\n    </div>\n  )\n}\n\n\nconst Create = ({ handleCreate, \n    title, handleTitle,\n    author, handleAuthor,\n    url, handleUrl }) => (\n  <div>\n    <h3>create new</h3>\n    <form onSubmit={handleCreate}>\n      <div>\n        title:\n        <input type=\"text\" name=\"Title\" \n            value={title} onChange={handleTitle} />\n      </div>\n      <div>\n        author:\n        <input type=\"text\" name=\"Author\" \n            value={author} onChange={handleAuthor} />\n      </div>\n      <div>\n        url:\n        <input type=\"text\" name=\"Url\" \n            value={url} onChange={handleUrl} />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>\n  </div>\n)\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [notice, setNotice] = useState( null )\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  \n  const setTimedNotice = (notice) => {\n    setNotice(notice)\n    setTimeout( () => {setNotice(null)}, 5000 )\n  }\n  \n  const sortLikes = (a,b) => a.likes<b.likes\n\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs( blogs.sort(sortLikes) ) )\n  }, [])\n\n  useEffect(() => {\n    const credentialsJSON = window.localStorage.getItem('credentials')\n    if (credentialsJSON) {\n      const credentials = JSON.parse(credentialsJSON)\n      setUser(credentials)\n    }\n  }, [])\n\n  const handleNotice = (event) => setNotice(null)\n\n  const handleUsername = (event) => setUsername(event.target.value)\n  const handlePassword = (event) => setPassword(event.target.value)\n  const handleLogout = async (event) => {\n    window.localStorage.removeItem('credentials')\n    setTimedNotice(`Lugged out successfully`)\n    setUser(null)\n  }\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const loginUser = await loginService.login({username, password})\n      blogService.setToken(loginUser.token)\n      window.localStorage.setItem('credentials', JSON.stringify(loginUser))\n      setTimedNotice(`Successfully logged in as ${loginUser.username}`)\n      setUser(loginUser)\n      setUsername('')\n      setPassword('')\n    } catch (exception) { setTimedNotice(\"ERROR: wrogn credentials!\") }\n  }\n\n  const handleTitle = (event) => setTitle(event.target.value)\n  const handleAuthor = (event) => setAuthor(event.target.value)\n  const handleUrl = (event) => setUrl(event.target.value)\n  const handleCreate = async (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url\n    }\n    blogService.setToken(user.token)\n    blogService.create(blogObject).then(returnedBlog => {\n      setBlogs(blogs.concat(returnedBlog))\n      setTimedNotice(`Successfully added blog ${returnedBlog.title}`)\n      setTitle('')\n      setAuthor('')\n      setUrl('')\n    }).catch( (error) => setTimedNotice(error.toString()) )\n  }\n\n  const handleLike = async (event) => {\n    event.preventDefault()\n    const id=event.target.attributes.blogid.value\n    const blog=blogs.find( b => b.id === id )\n    const updatedBlog = {\n      ...blog,\n      likes: blog.likes+1\n    }\n    blogService.setToken(user.token)\n    blogService.update(updatedBlog).then(returnedBlog => {\n      setBlogs(\n        blogs.filter(b => b.id != id).concat(returnedBlog).sort(sortLikes)\n      )\n      setTimedNotice(`Successfully liked blog ${returnedBlog.title}`)\n    }).catch( (error) => setTimedNotice(error.toString()) )\n    \n  }\n\n  const loggedIn = !(user === null)\n  \n  if (!loggedIn) return <div>\n    <Header />\n    <Notify notice={notice} handleNotice={handleNotice} />\n    <Togglable buttonLabel='login'>\n      <Login.Form handleLogin={handleLogin}\n          username={username} handleUsername={handleUsername}\n          password={password} handlePassword={handlePassword} />\n    </Togglable>\n  </div>\n  else return <div>\n    <Header />\n    <Notify notice={notice} handleNotice={handleNotice} />\n    <Login.Info user={user} handleLogout={handleLogout} />\n    <Togglable buttonLabel='add blog'>\n      <Create handleCreate={handleCreate} \n          title={title}  handleTitle={handleTitle}\n          author={author} handleAuthor={handleAuthor}\n          url={url} handleUrl={handleUrl} />\n    </Togglable>\n    {blogs.map(blog => \n      <Blog key={blog.id} blog={blog} handleLike={handleLike}/> \n    )}\n  </div>\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}