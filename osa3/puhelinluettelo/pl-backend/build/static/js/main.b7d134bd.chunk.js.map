{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services","getAll","axios","get","then","resp","data","create","newContact","post","delEntry","id","delete","replace","put","Contacts","persons","deleter","map","p","person","name","Contact","number","onClick","Filter","value","handle","onChange","PersonForm","nameHandle","numberHandle","submit","onSubmit","type","NameInput","NumberInput","Notification","msg","className","startsWith","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newNotify","setNewNotify","useEffect","personsService","operationOK","catch","setTimeout","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","oldPerson","find","window","confirm","newPersons","contactObject","push","respData","concat","error","response","remainingPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7d134bd.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then( resp => resp.data )\n}\n\nconst create = newContact => {\n  const req = axios.post(baseUrl, newContact)\n  return req.then( resp => resp.data )\n}\n\nconst delEntry = id => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then( resp => resp.data )\n}\n\nconst replace = (id, newContact ) => {\n  const req = axios.put(`${baseUrl}/${id}`, newContact)\n  return req.then( resp => resp.data )\n}\n\nconst services = { getAll, create, delEntry, replace }\nexport default services\n","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport './index.css'\n\n\nconst Contacts = ({persons, deleter}) => {\n  return ( persons.map( p => \n    <Contact person={p} key={p.name} deleter={deleter}/>\n  ))\n}\n\nconst Contact = ({person, deleter}) => (\n  <div>\n    <p>\n      {person.name} {person.number}\n      <button id={person.id} onClick={deleter}>delete</button>\n    </p>\n  </div>\n)\n\nconst Filter = ({ value, handle }) => (\n  <form>\n    <div>\n      filter shown with:\n      <input value={value} onChange={handle} />\n    </div>\n  </form>     \n)\n\nconst PersonForm = ({name, nameHandle, number, numberHandle, submit}) => (\n  <form onSubmit={submit}>\n    <NameInput value={name} handle={nameHandle} />\n    <NumberInput value={number} handle={numberHandle} />\n    <div> <button type=\"submit\">add</button> </div>\n  </form>\n)\nconst NameInput = ({ value, handle }) => \n  <div> name: <input value={value} onChange={handle} /></div>\nconst NumberInput = ({ value, handle }) => \n  <div> number: <input value={value} onChange={handle} /></div>\n\nconst Notification = ({msg}) => {\n  if (msg===null) return null\n  return (\n    <div className=\"infoCont\">\n      <div className={msg.startsWith('ERROR')?'error':'info'}>{msg}</div>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ newNotify, setNewNotify ] = useState( null )\n  \n  useEffect( () => personsService.getAll().then( data => {\n    setPersons(data)\n    operationOK('Phonebook loaded from server succesfully')\n  }).catch( () => {\n    operationOK('ERROR: Cannot load phonebook from server')\n  }), [])\n      \n  const operationOK = (msg) => {\n    setNewNotify( msg )\n    setTimeout( () => setNewNotify(null), 3000 )\n    setNewName( '' )\n    setNewNumber( '' )\n    setNewFilter( '' )\n  }\n\n  const addEntry = (event) => {\n    event.preventDefault()\n\n    const oldPerson = persons.find( p => p.name === newName )\n    if (oldPerson) {\n\n      if (!window.confirm(\n        `${newName} is already added to phonebook. `+\n          `Do you want to replace old number (${oldPerson.number}) with`+\n          `a new one (${newNumber})?`\n      )) return\n\n      const newPersons=persons.filter( p => p.id !== oldPerson.id )\n      const contactObject = {\n        name: newName,\n        number: newNumber,\n        id: oldPerson.id\n      }\n      newPersons.push(contactObject)\n\n      personsService.replace(oldPerson.id, contactObject).then( () => {\n        setPersons(newPersons)\n        operationOK(`Contact \"${newName}\" replaced succesfully`) \n      }).catch( () => {\n        operationOK(`ERROR: Cannot replace contact \"${newName}\" on server`+\n            'Is it still there? Try refreshing page.')\n      })\n      \n      return\n    }\n\n    const contactObject = {\n      name: newName,\n      number: newNumber,\n    }\n    personsService.create(contactObject).then( respData => {\n      setPersons( persons.concat(respData) )\n      operationOK(`Contact \"${newName}\" added succesfully`) \n    }).catch( error => {\n      operationOK(`ERROR: ${error.response.data.error}`)\n    })\n  }\n  \n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const handleFilterChange = (event) => setNewFilter(event.target.value)\n  \n  const handleDelete = (event) => {\n    const person = persons.find( p => p.id === event.target.id )\n    if (!window.confirm(`Delete \"${person.name}\" ?`)) return\n    const remainingPersons=persons.filter( p => p.id !== person.id )\n    personsService.delEntry(person.id).then( () => { \n      setPersons(remainingPersons)\n      operationOK(`Contact \"${person.name}\" deleted succesfully.`) \n    }).catch( () => {\n      operationOK(`ERROR: Cannot delete contact \"${person.name}\" from server`)\n    }) \n  }\n  \n  const filteredPersons = newFilter === '' \n    ? persons\n    : persons.filter(p=>p.name.toLowerCase().includes(newFilter.toLowerCase()))\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={newNotify} />\n      <Filter value={newFilter} handle={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName} nameHandle={handleNameChange}\n        number={newNumber} numberHandle={handleNumberChange}\n        submit={addEntry}\n      />\n      <h2>Numbers</h2>\n      <Contacts persons={filteredPersons} deleter={handleDelete} />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}